{
	"info": {
		"_postman_id": "petcare-auth-api-updated",
		"name": "PetCare Authentication API (Updated Response)",
		"description": "Updated API collection for PetCare authentication system - Registration and OTP verification return message only",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "🔧 Health Checks",
			"item": [
				{
					"name": "Auth Service Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/test",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "test"]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/auth/test",
									"host": ["{{base_url}}"],
									"path": ["api", "auth", "test"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Auth API is working!\",\n  \"data\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "👥 Registration Flow",
			"item": [
				{
					"name": "Register Pet Owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Registration successful\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include(\"Registration successful\");",
									"});",
									"",
									"pm.test(\"No data returned for registration\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});",
									"",
									"// Save email for next requests",
									"const requestBody = JSON.parse(pm.request.body.raw);",
									"pm.environment.set(\"test_email\", requestBody.email);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"petowner{{$randomInt}}@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"fullName\": \"John Doe\",\n  \"phoneNumber\": \"0123456789\",\n  \"role\": \"PET_OWNER\",\n  \"address\": \"123 Main Street, City\",\n  \"emergencyContactName\": \"Jane Doe\",\n  \"emergencyContactPhone\": \"0987654321\",\n  \"bio\": \"I love taking care of my pets\",\n  \"allowAccountSharing\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"petowner@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"fullName\": \"John Doe\",\n  \"phoneNumber\": \"0123456789\",\n  \"role\": \"PET_OWNER\",\n  \"address\": \"123 Main Street, City\",\n  \"emergencyContactName\": \"Jane Doe\",\n  \"emergencyContactPhone\": \"0987654321\",\n  \"bio\": \"I love taking care of my pets\",\n  \"allowAccountSharing\": false\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register",
									"host": ["{{base_url}}"],
									"path": ["api", "auth", "register"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Registration successful! Please check your email for OTP verification.\",\n  \"data\": null\n}"
						},
						{
							"name": "Email Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"petowner@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"fullName\": \"John Doe\",\n  \"phoneNumber\": \"0123456789\",\n  \"role\": \"PET_OWNER\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/register",
									"host": ["{{base_url}}"],
									"path": ["api", "auth", "register"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Email is already registered!\",\n  \"data\": null\n}"
						}
					]
				},
				{
					"name": "Register Veterinarian",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Registration successful\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include(\"Registration successful\");",
									"});",
									"",
									"pm.test(\"No data returned for registration\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"vet{{$randomInt}}@example.com\",\n  \"password\": \"VetPass123!\",\n  \"fullName\": \"Dr. Smith\",\n  \"phoneNumber\": \"0111222333\",\n  \"role\": \"VETERINARIAN\",\n  \"address\": \"456 Medical Street, City\",\n  \"licenseNumber\": \"VET123456\",\n  \"experienceYears\": 5,\n  \"specializations\": \"General Practice, Surgery\",\n  \"clinicName\": \"Happy Pets Clinic\",\n  \"clinicAddress\": \"789 Clinic Road, City\",\n  \"availableFromTime\": \"09:00\",\n  \"availableToTime\": \"17:00\",\n  \"availableDays\": \"Monday,Tuesday,Wednesday,Thursday,Friday\",\n  \"consultationFee\": 50.0,\n  \"isAvailableForEmergency\": true,\n  \"bio\": \"Experienced veterinarian specializing in small animals\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				},
				{
					"name": "Register Shelter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Registration successful\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include(\"Registration successful\");",
									"});",
									"",
									"pm.test(\"No data returned for registration\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"shelter{{$randomInt}}@example.com\",\n  \"password\": \"ShelterPass123!\",\n  \"fullName\": \"Animal Shelter Admin\",\n  \"phoneNumber\": \"0999888777\",\n  \"role\": \"SHELTER\",\n  \"address\": \"321 Shelter Avenue, City\",\n  \"shelterName\": \"Happy Animals Shelter\",\n  \"contactPersonName\": \"Mary Johnson\",\n  \"registrationNumber\": \"SH2024001\",\n  \"website\": \"https://happyanimals.org\",\n  \"description\": \"Non-profit animal shelter dedicated to finding homes for abandoned pets\",\n  \"capacity\": 100,\n  \"currentOccupancy\": 75,\n  \"acceptsDonations\": true,\n  \"operatingHours\": \"08:00-18:00\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "register"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "📧 OTP Verification",
			"item": [
				{
					"name": "Verify OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Email verified successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"Email verified successfully!\");",
									"});",
									"",
									"pm.test(\"No data returned for OTP verification\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"otpCode\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/verify-otp",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "verify-otp"]
						}
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"petowner@example.com\",\n  \"otpCode\": \"123456\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/verify-otp",
									"host": ["{{base_url}}"],
									"path": ["api", "auth", "verify-otp"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Email verified successfully!\",\n  \"data\": null\n}"
						},
						{
							"name": "Invalid OTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"petowner@example.com\",\n  \"otpCode\": \"999999\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/verify-otp",
									"host": ["{{base_url}}"],
									"path": ["api", "auth", "verify-otp"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Invalid or expired OTP!\",\n  \"data\": null\n}"
						}
					]
				},
				{
					"name": "Resend OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"OTP resent successfully\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include(\"New OTP sent\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/resend-otp?email={{test_email}}",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "resend-otp"],
							"query": [
								{
									"key": "email",
									"value": "{{test_email}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/auth/resend-otp?email=petowner@example.com",
									"host": ["{{base_url}}"],
									"path": ["api", "auth", "resend-otp"],
									"query": [
										{
											"key": "email",
											"value": "petowner@example.com"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"New OTP sent to your email!\",\n  \"data\": null\n}"
						}
					]
				}
			]
		},
		{
			"name": "🔐 Authentication (For Comparison)",
			"item": [
				{
					"name": "Login (Still returns data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Login successful\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.include(\"Login successful\");",
									"});",
									"",
									"pm.test(\"Login returns token data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.not.be.null;",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"    pm.expect(jsonData.data).to.have.property('userId');",
									"    pm.expect(jsonData.data).to.have.property('email');",
									"});",
									"",
									"// Save token for authenticated requests",
									"if (pm.response.json().success && pm.response.json().data) {",
									"    pm.environment.set(\"auth_token\", pm.response.json().data.token);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"petowner@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": ["{{base_url}}"],
									"path": ["api", "auth", "login"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"message\": \"Login successful!\",\n  \"data\": {\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwZXRvd25lckBleGFtcGxlLmNvbSIsInVzZXJJZCI6MSwidXNlclJvbGUiOiJQRVRfT1dORVIiLCJpYXQiOjE2ODk2NzIwMDAsImV4cCI6MTY4OTc1ODQwMH0.xyz...\",\n    \"userId\": 1,\n    \"email\": \"petowner@example.com\",\n    \"fullName\": \"John Doe\",\n    \"role\": \"PET_OWNER\",\n    \"isEmailVerified\": true\n  }\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.environment.get(\"base_url\")) {",
					"    pm.environment.set(\"base_url\", \"http://localhost:8080\");",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}
